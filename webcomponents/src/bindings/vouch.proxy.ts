/* This file is generated by zits. Do not edit manually */

import {ClaimThresholdInput} from "./membranes.types";
import {VouchThresholdEntry, Vouch, VouchThreshold, } from './vouch.types';
import {
/** types.ts */
HoloHash,
AgentPubKey,
DnaHash,
WasmHash,
EntryHash,
ActionHash,
AnyDhtHash,
KitsuneAgent,
KitsuneSpace,
HoloHashB64,
AgentPubKeyB64,
DnaHashB64,
WasmHashB64,
EntryHashB64,
ActionHashB64,
AnyDhtHashB64,
InstalledAppId,
Signature,
CellId,
DnaProperties,
RoleName,
Timestamp,
Duration,
HoloHashed,
NetworkInfo,
FetchQueueInfo,
/** hdk/action.ts */
SignedActionHashed,
ActionHashed,
ActionType,
Action,
NewEntryAction,
Dna,
AgentValidationPkg,
InitZomesComplete,
CreateLink,
DeleteLink,
OpenChain,
CloseChain,
Update,
Delete,
Create,
/** hdk/capabilities.ts */
CapSecret,
CapClaim,
ZomeCallCapGrant,
CapAccess,
CapGrant,
GrantedFunctionsType,
///** hdk/countersigning.ts */
//CounterSigningSessionData,
//PreflightRequest,
//CounterSigningSessionTimes,
//ActionBase,
//CounterSigningAgents,
//PreflightBytes,
//Role,
//CountersigningAgentState,
/** hdk/dht-ops.ts */
DhtOpType,
DhtOp,
getDhtOpType,
getDhtOpAction,
getDhtOpEntry,
getDhtOpSignature,
/** hdk/entry.ts */
EntryVisibility,
AppEntryDef,
EntryType,
EntryContent,
Entry,
/** hdk/record.ts */
Record as HcRecord,
RecordEntry as HcRecordEntry,
/** api/admin/types.ts */
InstalledAppInfoStatus,
StemCell,
ProvisionedCell,
ClonedCell,
CellType,
CellInfo,
AppInfo,
MembraneProof,
FunctionName,
ZomeName,
ZomeDefinition,
IntegrityZome,
CoordinatorZome,
DnaDefinition,
ResourceBytes,
ResourceMap,
CellProvisioningStrategy,
CellProvisioning,
DnaVersionSpec,
DnaVersionFlexible,
AppRoleDnaManifest,
AppRoleManifest,
AppManifest,
AppBundle,
AppBundleSource,
NetworkSeed,
ZomeLocation,
   } from '@holochain/client';

import {
/** Common */
DhtOpHashB64,
DhtOpHash,
/** DnaFile */
DnaFile,
DnaDef,
Zomes,
WasmCode,
/** entry-details */
EntryDetails,
RecordDetails,
Details,
DetailsType,
EntryDhtStatus,
/** Validation */
ValidationStatus,
ValidationReceipt,
   } from '@holochain-open-dev/core-types';

import {ZomeProxy} from '@ddd-qc/lit-happ';
import {vouchFunctionNames} from './vouch.fn';

/**
 *
 */
export class VouchProxy extends ZomeProxy {
  static readonly DEFAULT_ZOME_NAME = "zThreshold_Vouch"
  static readonly FN_NAMES = vouchFunctionNames
 


  async getAllRoleNames(): Promise<string[]> {
    return this.call('get_all_role_names', null);
  }

  async claimThresholdVouch(input: ClaimThresholdInput): Promise<SignedActionHashed[] | null> {
    return this.call('claim_threshold_Vouch', input);
  }

  async getVouchAuthor(typed: Vouch): Promise<AgentPubKey> {
    return this.call('get_vouch_author', typed);
  }

  async getVouch(eh: EntryHash): Promise<Vouch | null> {
    return this.call('get_vouch', eh);
  }

  async publishVouch(vouch: Vouch): Promise<EntryHash> {
    return this.call('publish_vouch', vouch);
  }

  async getMyEmittedVouches(maybeRole: string): Promise<EntryHash[]> {
    return this.call('get_my_emitted_vouches', maybeRole);
  }

  async getMyReceivedVouches(maybeRole: string): Promise<[EntryHash, AgentPubKey][]> {
    return this.call('get_my_received_vouches', maybeRole);
  }
}
